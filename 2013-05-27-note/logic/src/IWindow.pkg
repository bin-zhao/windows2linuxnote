#include <cocos2d.h>
#include <string>
#include <list>

class IWindow
{
public:
	enum
	{
		_TYPED_WINDOW_UNKOWN_,           // 未知类型的UI窗口
		_TYPED_WINDOW_LOADING_,          // 加载进度条窗口
		_TYPED_WINDOW_TOP_,              // 最顶层窗口
		_TYPED_WINDOW_ALERT_,            // Alert窗口
		_TYPED_WINDOW_MESSAGEBOX_,       // MessageBox窗口
		_TYPED_WINDOW_LOGO_,             // LOGO窗口
		_TYPED_WINDOW_LOGIN_,            // 登陆窗口
		_TYPED_WINDOW_LOBBY_,            // 大厅窗口
		_TYPED_WINDOW_ARENA_,            // 竞技场场景窗口
		_TYPED_WINDOW_ARENARESULT_,      // 竞技场结果面板
		_TYPED_WINDOW_PAUSE_,            // 竞技场暂停面板
		_TYPED_WINDOW_SYSTEM_SETTING_,   // 系统设置面板
		_TYPED_WINDOW_SHOP_,             // 商店面板
	};
	
public:
	/*
		得到当前LAYOUT名称
	*/
	int                GetWindowType();
	/*
		是否已经加载
	*/
	bool               IsLoad();
	/*
		得到根窗口指针
	*/
	cocos2d::CCNode*   GetRootNode();
	
public:
	/*
		设置窗口指定索引的数据
	*/
	void  SetWindowDataByPos(std::string str, unsigned int pos);
	/*
		得到
	*/
	std::string GetWindowDataByPos(unsigned int pos);
	
public:
	/*
		是否帧监听
	*/
	virtual    void    SetTickListenser(bool bListenser);
	/*
		设置LAYOUT显示于隐藏
	*/
	virtual    void    Show(bool bShow);
	/*
		判断LAYOYUT是否可见
	*/
	virtual    bool    IsVisible();
	/*
		是否正在渐隐中
	*/
	virtual    bool    IsFadeout();
	
public:
	/*
		设置X坐标
	*/
	virtual    void    SetXPosition(float xPos);
	/*
		得到X坐标
	*/
	virtual    float   GetXPosition();
	/*
		设置Y坐标
	*/
	virtual    void    SetYPosition(float yPos);
	/*
		得到Y坐标
	*/
	virtual    float   GetYPosition();
	/*
		设置X缩放比例
	*/
	virtual    void    SetXScale(float xScale);
	/*
		设置Y缩放比例
	*/
	virtual    void    SetYScale(float yScale);
	/*
		注册UI绑定事件
	*/
	virtual    void    RegisterEvent(int iEventType, bool bNotifyOnlyWhenVisible=false);
	/*
		分发事件
	*/
	virtual    void    PushEvent(int iEventType);
	/*
		分发事件
	*/
	virtual    void    PushEvent(int iEventType, char* pArgs);
	/*
		播放窗口打开时的音效
	*/
	virtual    void    PlayOpenSound();
	
public:
	/*
		注册脚本定时回调接口
	*/
	virtual    void    RegisterTimerFunction(float time, std::string functionName);
	
public:
	/*
		渐隐窗口
	*/
	virtual    void    Fadeout(float time);
	
public:
	/*
		初始化处理
	*/
	virtual    bool    Init();
	/*
		加载处理
	*/
	virtual    bool    Load();
	/*
		桢更新处理
	*/
	virtual    void    Tick();
	/*
		销毁处理
	*/ 
	virtual    void    Destroy();
};
